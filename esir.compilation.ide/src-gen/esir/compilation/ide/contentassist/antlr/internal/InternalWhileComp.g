/*
 * generated by Xtext 2.10.0
 */
grammar InternalWhileComp;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package esir.compilation.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package esir.compilation.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import esir.compilation.services.WhileCompGrammarAccess;

}
@parser::members {
	private WhileCompGrammarAccess grammarAccess;

	public void setGrammarAccess(WhileCompGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProgram
entryRuleProgram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getFunctionsAssignment()); }
		(rule__Program__FunctionsAssignment)*
		{ after(grammarAccess.getProgramAccess().getFunctionsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunction
entryRuleFunction
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getGroup()); }
		(rule__Function__Group__0)
		{ after(grammarAccess.getFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefinition
entryRuleDefinition
:
{ before(grammarAccess.getDefinitionRule()); }
	 ruleDefinition
{ after(grammarAccess.getDefinitionRule()); } 
	 EOF 
;

// Rule Definition
ruleDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefinitionAccess().getGroup()); }
		(rule__Definition__Group__0)
		{ after(grammarAccess.getDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRead
entryRuleRead
:
{ before(grammarAccess.getReadRule()); }
	 ruleRead
{ after(grammarAccess.getReadRule()); } 
	 EOF 
;

// Rule Read
ruleRead 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReadAccess().getGroup()); }
		(rule__Read__Group__0)
		{ after(grammarAccess.getReadAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWrite
entryRuleWrite
:
{ before(grammarAccess.getWriteRule()); }
	 ruleWrite
{ after(grammarAccess.getWriteRule()); } 
	 EOF 
;

// Rule Write
ruleWrite 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWriteAccess().getGroup()); }
		(rule__Write__Group__0)
		{ after(grammarAccess.getWriteAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAffectation
entryRuleAffectation
:
{ before(grammarAccess.getAffectationRule()); }
	 ruleAffectation
{ after(grammarAccess.getAffectationRule()); } 
	 EOF 
;

// Rule Affectation
ruleAffectation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAffectationAccess().getGroup()); }
		(rule__Affectation__Group__0)
		{ after(grammarAccess.getAffectationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNop
entryRuleNop
:
{ before(grammarAccess.getNopRule()); }
	 ruleNop
{ after(grammarAccess.getNopRule()); } 
	 EOF 
;

// Rule Nop
ruleNop 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNopAccess().getNopAssignment()); }
		(rule__Nop__NopAssignment)
		{ after(grammarAccess.getNopAccess().getNopAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommands
entryRuleCommands
:
{ before(grammarAccess.getCommandsRule()); }
	 ruleCommands
{ after(grammarAccess.getCommandsRule()); } 
	 EOF 
;

// Rule Commands
ruleCommands 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandsAccess().getGroup()); }
		(rule__Commands__Group__0)
		{ after(grammarAccess.getCommandsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommand
entryRuleCommand
:
{ before(grammarAccess.getCommandRule()); }
	 ruleCommand
{ after(grammarAccess.getCommandRule()); } 
	 EOF 
;

// Rule Command
ruleCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandAccess().getAlternatives()); }
		(rule__Command__Alternatives)
		{ after(grammarAccess.getCommandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForeach
entryRuleForeach
:
{ before(grammarAccess.getForeachRule()); }
	 ruleForeach
{ after(grammarAccess.getForeachRule()); } 
	 EOF 
;

// Rule Foreach
ruleForeach 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForeachAccess().getGroup()); }
		(rule__Foreach__Group__0)
		{ after(grammarAccess.getForeachAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIf
entryRuleIf
:
{ before(grammarAccess.getIfRule()); }
	 ruleIf
{ after(grammarAccess.getIfRule()); } 
	 EOF 
;

// Rule If
ruleIf 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfAccess().getGroup()); }
		(rule__If__Group__0)
		{ after(grammarAccess.getIfAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFor
entryRuleFor
:
{ before(grammarAccess.getForRule()); }
	 ruleFor
{ after(grammarAccess.getForRule()); } 
	 EOF 
;

// Rule For
ruleFor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForAccess().getGroup()); }
		(rule__For__Group__0)
		{ after(grammarAccess.getForAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhile
entryRuleWhile
:
{ before(grammarAccess.getWhileRule()); }
	 ruleWhile
{ after(grammarAccess.getWhileRule()); } 
	 EOF 
;

// Rule While
ruleWhile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileAccess().getGroup()); }
		(rule__While__Group__0)
		{ after(grammarAccess.getWhileAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpr
entryRuleExpr
:
{ before(grammarAccess.getExprRule()); }
	 ruleExpr
{ after(grammarAccess.getExprRule()); } 
	 EOF 
;

// Rule Expr
ruleExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprAccess().getExprsimpleAssignment()); }
		(rule__Expr__ExprsimpleAssignment)
		{ after(grammarAccess.getExprAccess().getExprsimpleAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExprSimple
entryRuleExprSimple
:
{ before(grammarAccess.getExprSimpleRule()); }
	 ruleExprSimple
{ after(grammarAccess.getExprSimpleRule()); } 
	 EOF 
;

// Rule ExprSimple
ruleExprSimple 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprSimpleAccess().getAlternatives()); }
		(rule__ExprSimple__Alternatives)
		{ after(grammarAccess.getExprSimpleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLexpr
entryRuleLexpr
:
{ before(grammarAccess.getLexprRule()); }
	 ruleLexpr
{ after(grammarAccess.getLexprRule()); } 
	 EOF 
;

// Rule Lexpr
ruleLexpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLexprAccess().getGroup()); }
		(rule__Lexpr__Group__0)
		{ after(grammarAccess.getLexprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNot
entryRuleNot
:
{ before(grammarAccess.getNotRule()); }
	 ruleNot
{ after(grammarAccess.getNotRule()); } 
	 EOF 
;

// Rule Not
ruleNot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNotAccess().getNotAssignment()); }
		(rule__Not__NotAssignment)
		{ after(grammarAccess.getNotAccess().getNotAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getCommandAssignment_0()); }
		(rule__Command__CommandAssignment_0)
		{ after(grammarAccess.getCommandAccess().getCommandAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getCommandAssignment_1()); }
		(rule__Command__CommandAssignment_1)
		{ after(grammarAccess.getCommandAccess().getCommandAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getCommandAssignment_2()); }
		(rule__Command__CommandAssignment_2)
		{ after(grammarAccess.getCommandAccess().getCommandAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getCommandAssignment_3()); }
		(rule__Command__CommandAssignment_3)
		{ after(grammarAccess.getCommandAccess().getCommandAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getCommandAssignment_4()); }
		(rule__Command__CommandAssignment_4)
		{ after(grammarAccess.getCommandAccess().getCommandAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getCommandAssignment_5()); }
		(rule__Command__CommandAssignment_5)
		{ after(grammarAccess.getCommandAccess().getCommandAssignment_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getValeurAssignment_0()); }
		(rule__ExprSimple__ValeurAssignment_0)
		{ after(grammarAccess.getExprSimpleAccess().getValeurAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getExprSimpleAccess().getValeurAssignment_1()); }
		(rule__ExprSimple__ValeurAssignment_1)
		{ after(grammarAccess.getExprSimpleAccess().getValeurAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getExprSimpleAccess().getValeurAssignment_2()); }
		(rule__ExprSimple__ValeurAssignment_2)
		{ after(grammarAccess.getExprSimpleAccess().getValeurAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getExprSimpleAccess().getGroup_3()); }
		(rule__ExprSimple__Group_3__0)
		{ after(grammarAccess.getExprSimpleAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getExprSimpleAccess().getGroup_4()); }
		(rule__ExprSimple__Group_4__0)
		{ after(grammarAccess.getExprSimpleAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getExprSimpleAccess().getGroup_5()); }
		(rule__ExprSimple__Group_5__0)
		{ after(grammarAccess.getExprSimpleAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getExprSimpleAccess().getGroup_6()); }
		(rule__ExprSimple__Group_6__0)
		{ after(grammarAccess.getExprSimpleAccess().getGroup_6()); }
	)
	|
	(
		{ before(grammarAccess.getExprSimpleAccess().getGroup_7()); }
		(rule__ExprSimple__Group_7__0)
		{ after(grammarAccess.getExprSimpleAccess().getGroup_7()); }
	)
	|
	(
		{ before(grammarAccess.getExprSimpleAccess().getGroup_8()); }
		(rule__ExprSimple__Group_8__0)
		{ after(grammarAccess.getExprSimpleAccess().getGroup_8()); }
	)
	|
	(
		{ before(grammarAccess.getExprSimpleAccess().getGroup_9()); }
		(rule__ExprSimple__Group_9__0)
		{ after(grammarAccess.getExprSimpleAccess().getGroup_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__OpeAlternatives_9_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getOpeAndKeyword_9_2_0_0()); }
		'and'
		{ after(grammarAccess.getExprSimpleAccess().getOpeAndKeyword_9_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExprSimpleAccess().getOpeOrKeyword_9_2_0_1()); }
		'or'
		{ after(grammarAccess.getExprSimpleAccess().getOpeOrKeyword_9_2_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getExprSimpleAccess().getOpeEqualsSignQuestionMarkKeyword_9_2_0_2()); }
		'=?'
		{ after(grammarAccess.getExprSimpleAccess().getOpeEqualsSignQuestionMarkKeyword_9_2_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
	'function'
	{ after(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFunctionAssignment_1()); }
	(rule__Function__FunctionAssignment_1)
	{ after(grammarAccess.getFunctionAccess().getFunctionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getFunctionAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getDefinitionAssignment_3()); }
	(rule__Function__DefinitionAssignment_3)
	{ after(grammarAccess.getFunctionAccess().getDefinitionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__0__Impl
	rule__Definition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getReadAssignment_0()); }
	(rule__Definition__ReadAssignment_0)
	{ after(grammarAccess.getDefinitionAccess().getReadAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__1__Impl
	rule__Definition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getPercentSignKeyword_1()); }
	'%'
	{ after(grammarAccess.getDefinitionAccess().getPercentSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__2__Impl
	rule__Definition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getCommandsAssignment_2()); }
	(rule__Definition__CommandsAssignment_2)
	{ after(grammarAccess.getDefinitionAccess().getCommandsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__3__Impl
	rule__Definition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getPercentSignKeyword_3()); }
	'%'
	{ after(grammarAccess.getDefinitionAccess().getPercentSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getWriteAssignment_4()); }
	(rule__Definition__WriteAssignment_4)
	{ after(grammarAccess.getDefinitionAccess().getWriteAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Read__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Read__Group__0__Impl
	rule__Read__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Read__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReadAccess().getReadKeyword_0()); }
	'read'
	{ after(grammarAccess.getReadAccess().getReadKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Read__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Read__Group__1__Impl
	rule__Read__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Read__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReadAccess().getVariableAssignment_1()); }
	(rule__Read__VariableAssignment_1)
	{ after(grammarAccess.getReadAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Read__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Read__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Read__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReadAccess().getGroup_2()); }
	(rule__Read__Group_2__0)*
	{ after(grammarAccess.getReadAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Read__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Read__Group_2__0__Impl
	rule__Read__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Read__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReadAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getReadAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Read__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Read__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Read__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReadAccess().getVariableAssignment_2_1()); }
	(rule__Read__VariableAssignment_2_1)
	{ after(grammarAccess.getReadAccess().getVariableAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Write__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Write__Group__0__Impl
	rule__Write__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Write__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWriteAccess().getWriteKeyword_0()); }
	'write'
	{ after(grammarAccess.getWriteAccess().getWriteKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Write__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Write__Group__1__Impl
	rule__Write__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Write__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWriteAccess().getVariableAssignment_1()); }
	(rule__Write__VariableAssignment_1)
	{ after(grammarAccess.getWriteAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Write__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Write__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Write__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWriteAccess().getGroup_2()); }
	(rule__Write__Group_2__0)*
	{ after(grammarAccess.getWriteAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Write__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Write__Group_2__0__Impl
	rule__Write__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Write__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWriteAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getWriteAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Write__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Write__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Write__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWriteAccess().getVariableAssignment_2_1()); }
	(rule__Write__VariableAssignment_2_1)
	{ after(grammarAccess.getWriteAccess().getVariableAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Affectation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affectation__Group__0__Impl
	rule__Affectation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectationAccess().getAffectationsAssignment_0()); }
	(rule__Affectation__AffectationsAssignment_0)
	{ after(grammarAccess.getAffectationAccess().getAffectationsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affectation__Group__1__Impl
	rule__Affectation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectationAccess().getGroup_1()); }
	(rule__Affectation__Group_1__0)*
	{ after(grammarAccess.getAffectationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affectation__Group__2__Impl
	rule__Affectation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectationAccess().getColonEqualsSignKeyword_2()); }
	':='
	{ after(grammarAccess.getAffectationAccess().getColonEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affectation__Group__3__Impl
	rule__Affectation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectationAccess().getValeursAssignment_3()); }
	(rule__Affectation__ValeursAssignment_3)
	{ after(grammarAccess.getAffectationAccess().getValeursAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affectation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectationAccess().getGroup_4()); }
	(rule__Affectation__Group_4__0)*
	{ after(grammarAccess.getAffectationAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Affectation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affectation__Group_1__0__Impl
	rule__Affectation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectationAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getAffectationAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affectation__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectationAccess().getAffectationsAssignment_1_1()); }
	(rule__Affectation__AffectationsAssignment_1_1)
	{ after(grammarAccess.getAffectationAccess().getAffectationsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Affectation__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affectation__Group_4__0__Impl
	rule__Affectation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectationAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getAffectationAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Affectation__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAffectationAccess().getValeursAssignment_4_1()); }
	(rule__Affectation__ValeursAssignment_4_1)
	{ after(grammarAccess.getAffectationAccess().getValeursAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Commands__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commands__Group__0__Impl
	rule__Commands__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandsAccess().getCommandAssignment_0()); }
	(rule__Commands__CommandAssignment_0)
	{ after(grammarAccess.getCommandsAccess().getCommandAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commands__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandsAccess().getGroup_1()); }
	(rule__Commands__Group_1__0)*
	{ after(grammarAccess.getCommandsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Commands__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commands__Group_1__0__Impl
	rule__Commands__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandsAccess().getSemicolonKeyword_1_0()); }
	';'
	{ after(grammarAccess.getCommandsAccess().getSemicolonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commands__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandsAccess().getCommandsAssignment_1_1()); }
	(rule__Commands__CommandsAssignment_1_1)
	{ after(grammarAccess.getCommandsAccess().getCommandsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Foreach__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foreach__Group__0__Impl
	rule__Foreach__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachAccess().getForeachKeyword_0()); }
	'foreach'
	{ after(grammarAccess.getForeachAccess().getForeachKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foreach__Group__1__Impl
	rule__Foreach__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachAccess().getExpr1Assignment_1()); }
	(rule__Foreach__Expr1Assignment_1)
	{ after(grammarAccess.getForeachAccess().getExpr1Assignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foreach__Group__2__Impl
	rule__Foreach__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachAccess().getInKeyword_2()); }
	'in'
	{ after(grammarAccess.getForeachAccess().getInKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foreach__Group__3__Impl
	rule__Foreach__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachAccess().getExpr2Assignment_3()); }
	(rule__Foreach__Expr2Assignment_3)
	{ after(grammarAccess.getForeachAccess().getExpr2Assignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foreach__Group__4__Impl
	rule__Foreach__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachAccess().getDoKeyword_4()); }
	'do'
	{ after(grammarAccess.getForeachAccess().getDoKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foreach__Group__5__Impl
	rule__Foreach__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachAccess().getCommandsAssignment_5()); }
	(rule__Foreach__CommandsAssignment_5)
	{ after(grammarAccess.getForeachAccess().getCommandsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Foreach__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForeachAccess().getOdKeyword_6()); }
	'od'
	{ after(grammarAccess.getForeachAccess().getOdKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__0__Impl
	rule__If__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__1__Impl
	rule__If__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getExprAssignment_1()); }
	(rule__If__ExprAssignment_1)
	{ after(grammarAccess.getIfAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__2__Impl
	rule__If__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getThenKeyword_2()); }
	'then'
	{ after(grammarAccess.getIfAccess().getThenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__3__Impl
	rule__If__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getCommands1Assignment_3()); }
	(rule__If__Commands1Assignment_3)
	{ after(grammarAccess.getIfAccess().getCommands1Assignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__4__Impl
	rule__If__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getGroup_4()); }
	(rule__If__Group_4__0)?
	{ after(grammarAccess.getIfAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getFiKeyword_5()); }
	'fi'
	{ after(grammarAccess.getIfAccess().getFiKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group_4__0__Impl
	rule__If__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getElseKeyword_4_0()); }
	('else')
	{ after(grammarAccess.getIfAccess().getElseKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getCommands2Assignment_4_1()); }
	(rule__If__Commands2Assignment_4_1)
	{ after(grammarAccess.getIfAccess().getCommands2Assignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__For__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__0__Impl
	rule__For__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getForKeyword_0()); }
	'for'
	{ after(grammarAccess.getForAccess().getForKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__1__Impl
	rule__For__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getExprAssignment_1()); }
	(rule__For__ExprAssignment_1)
	{ after(grammarAccess.getForAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__2__Impl
	rule__For__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getDoKeyword_2()); }
	'do'
	{ after(grammarAccess.getForAccess().getDoKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__3__Impl
	rule__For__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getCommandsAssignment_3()); }
	(rule__For__CommandsAssignment_3)
	{ after(grammarAccess.getForAccess().getCommandsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getOdKeyword_4()); }
	'od'
	{ after(grammarAccess.getForAccess().getOdKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__0__Impl
	rule__While__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getWhileKeyword_0()); }
	'while'
	{ after(grammarAccess.getWhileAccess().getWhileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__1__Impl
	rule__While__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getExprAssignment_1()); }
	(rule__While__ExprAssignment_1)
	{ after(grammarAccess.getWhileAccess().getExprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__2__Impl
	rule__While__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getDoKeyword_2()); }
	'do'
	{ after(grammarAccess.getWhileAccess().getDoKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__3__Impl
	rule__While__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getCommandsAssignment_3()); }
	(rule__While__CommandsAssignment_3)
	{ after(grammarAccess.getWhileAccess().getCommandsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileAccess().getOdKeyword_4()); }
	'od'
	{ after(grammarAccess.getWhileAccess().getOdKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_3__0__Impl
	rule__ExprSimple__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getLeftParenthesisKeyword_3_0()); }
	'('
	{ after(grammarAccess.getExprSimpleAccess().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_3__1__Impl
	rule__ExprSimple__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getOpeAssignment_3_1()); }
	(rule__ExprSimple__OpeAssignment_3_1)
	{ after(grammarAccess.getExprSimpleAccess().getOpeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_3__2__Impl
	rule__ExprSimple__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getLexprAssignment_3_2()); }
	(rule__ExprSimple__LexprAssignment_3_2)
	{ after(grammarAccess.getExprSimpleAccess().getLexprAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getRightParenthesisKeyword_3_3()); }
	')'
	{ after(grammarAccess.getExprSimpleAccess().getRightParenthesisKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_4__0__Impl
	rule__ExprSimple__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getLeftParenthesisKeyword_4_0()); }
	'('
	{ after(grammarAccess.getExprSimpleAccess().getLeftParenthesisKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_4__1__Impl
	rule__ExprSimple__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getOpeAssignment_4_1()); }
	(rule__ExprSimple__OpeAssignment_4_1)
	{ after(grammarAccess.getExprSimpleAccess().getOpeAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_4__2__Impl
	rule__ExprSimple__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getLexprAssignment_4_2()); }
	(rule__ExprSimple__LexprAssignment_4_2)
	{ after(grammarAccess.getExprSimpleAccess().getLexprAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getRightParenthesisKeyword_4_3()); }
	')'
	{ after(grammarAccess.getExprSimpleAccess().getRightParenthesisKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_5__0__Impl
	rule__ExprSimple__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getLeftParenthesisKeyword_5_0()); }
	'('
	{ after(grammarAccess.getExprSimpleAccess().getLeftParenthesisKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_5__1__Impl
	rule__ExprSimple__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getOpeAssignment_5_1()); }
	(rule__ExprSimple__OpeAssignment_5_1)
	{ after(grammarAccess.getExprSimpleAccess().getOpeAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_5__2__Impl
	rule__ExprSimple__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getExprAssignment_5_2()); }
	(rule__ExprSimple__ExprAssignment_5_2)
	{ after(grammarAccess.getExprSimpleAccess().getExprAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getRightParenthesisKeyword_5_3()); }
	')'
	{ after(grammarAccess.getExprSimpleAccess().getRightParenthesisKeyword_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_6__0__Impl
	rule__ExprSimple__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getLeftParenthesisKeyword_6_0()); }
	'('
	{ after(grammarAccess.getExprSimpleAccess().getLeftParenthesisKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_6__1__Impl
	rule__ExprSimple__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getOpeAssignment_6_1()); }
	(rule__ExprSimple__OpeAssignment_6_1)
	{ after(grammarAccess.getExprSimpleAccess().getOpeAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_6__2__Impl
	rule__ExprSimple__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getExprAssignment_6_2()); }
	(rule__ExprSimple__ExprAssignment_6_2)
	{ after(grammarAccess.getExprSimpleAccess().getExprAssignment_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_6__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_6__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getRightParenthesisKeyword_6_3()); }
	')'
	{ after(grammarAccess.getExprSimpleAccess().getRightParenthesisKeyword_6_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_7__0__Impl
	rule__ExprSimple__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getLeftParenthesisKeyword_7_0()); }
	'('
	{ after(grammarAccess.getExprSimpleAccess().getLeftParenthesisKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_7__1__Impl
	rule__ExprSimple__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getNAssignment_7_1()); }
	(rule__ExprSimple__NAssignment_7_1)
	{ after(grammarAccess.getExprSimpleAccess().getNAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_7__2__Impl
	rule__ExprSimple__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getExprAssignment_7_2()); }
	(rule__ExprSimple__ExprAssignment_7_2)
	{ after(grammarAccess.getExprSimpleAccess().getExprAssignment_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_7__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_7__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_7__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getRightParenthesisKeyword_7_3()); }
	')'
	{ after(grammarAccess.getExprSimpleAccess().getRightParenthesisKeyword_7_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_8__0__Impl
	rule__ExprSimple__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getLeftParenthesisKeyword_8_0()); }
	'('
	{ after(grammarAccess.getExprSimpleAccess().getLeftParenthesisKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_8__1__Impl
	rule__ExprSimple__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getValeurAssignment_8_1()); }
	(rule__ExprSimple__ValeurAssignment_8_1)
	{ after(grammarAccess.getExprSimpleAccess().getValeurAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_8__2__Impl
	rule__ExprSimple__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getLexprAssignment_8_2()); }
	(rule__ExprSimple__LexprAssignment_8_2)
	{ after(grammarAccess.getExprSimpleAccess().getLexprAssignment_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_8__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_8__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_8__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getRightParenthesisKeyword_8_3()); }
	')'
	{ after(grammarAccess.getExprSimpleAccess().getRightParenthesisKeyword_8_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSimple__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_9__0__Impl
	rule__ExprSimple__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getLeftParenthesisKeyword_9_0()); }
	'('
	{ after(grammarAccess.getExprSimpleAccess().getLeftParenthesisKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_9__1__Impl
	rule__ExprSimple__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getEx1Assignment_9_1()); }
	(rule__ExprSimple__Ex1Assignment_9_1)
	{ after(grammarAccess.getExprSimpleAccess().getEx1Assignment_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_9__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_9__2__Impl
	rule__ExprSimple__Group_9__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_9__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getOpeAssignment_9_2()); }
	(rule__ExprSimple__OpeAssignment_9_2)
	{ after(grammarAccess.getExprSimpleAccess().getOpeAssignment_9_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_9__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_9__3__Impl
	rule__ExprSimple__Group_9__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_9__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getEx2Assignment_9_3()); }
	(rule__ExprSimple__Ex2Assignment_9_3)
	{ after(grammarAccess.getExprSimpleAccess().getEx2Assignment_9_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_9__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExprSimple__Group_9__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Group_9__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprSimpleAccess().getRightParenthesisKeyword_9_4()); }
	')'
	{ after(grammarAccess.getExprSimpleAccess().getRightParenthesisKeyword_9_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Lexpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Lexpr__Group__0__Impl
	rule__Lexpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Lexpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLexprAccess().getExprAssignment_0()); }
	(rule__Lexpr__ExprAssignment_0)
	{ after(grammarAccess.getLexprAccess().getExprAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lexpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Lexpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Lexpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLexprAccess().getLexprAssignment_1()); }
	(rule__Lexpr__LexprAssignment_1)?
	{ after(grammarAccess.getLexprAccess().getLexprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__FunctionsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getFunctionsFunctionParserRuleCall_0()); }
		ruleFunction
		{ after(grammarAccess.getProgramAccess().getFunctionsFunctionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__FunctionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getFunctionSYMBOLTerminalRuleCall_1_0()); }
		RULE_SYMBOL
		{ after(grammarAccess.getFunctionAccess().getFunctionSYMBOLTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__DefinitionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getDefinitionDefinitionParserRuleCall_3_0()); }
		ruleDefinition
		{ after(grammarAccess.getFunctionAccess().getDefinitionDefinitionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__ReadAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getReadReadParserRuleCall_0_0()); }
		ruleRead
		{ after(grammarAccess.getDefinitionAccess().getReadReadParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__CommandsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getCommandsCommandsParserRuleCall_2_0()); }
		ruleCommands
		{ after(grammarAccess.getDefinitionAccess().getCommandsCommandsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__WriteAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getWriteWriteParserRuleCall_4_0()); }
		ruleWrite
		{ after(grammarAccess.getDefinitionAccess().getWriteWriteParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Read__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReadAccess().getVariableVARIABLETerminalRuleCall_1_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getReadAccess().getVariableVARIABLETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Read__VariableAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReadAccess().getVariableVARIABLETerminalRuleCall_2_1_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getReadAccess().getVariableVARIABLETerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Write__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWriteAccess().getVariableVARIABLETerminalRuleCall_1_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getWriteAccess().getVariableVARIABLETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Write__VariableAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWriteAccess().getVariableVARIABLETerminalRuleCall_2_1_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getWriteAccess().getVariableVARIABLETerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__AffectationsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAffectationAccess().getAffectationsVARIABLETerminalRuleCall_0_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getAffectationAccess().getAffectationsVARIABLETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__AffectationsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAffectationAccess().getAffectationsVARIABLETerminalRuleCall_1_1_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getAffectationAccess().getAffectationsVARIABLETerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__ValeursAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAffectationAccess().getValeursExprParserRuleCall_3_0()); }
		ruleExpr
		{ after(grammarAccess.getAffectationAccess().getValeursExprParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Affectation__ValeursAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAffectationAccess().getValeursExprParserRuleCall_4_1_0()); }
		ruleExpr
		{ after(grammarAccess.getAffectationAccess().getValeursExprParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Nop__NopAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNopAccess().getNopNopKeyword_0()); }
		(
			{ before(grammarAccess.getNopAccess().getNopNopKeyword_0()); }
			'nop'
			{ after(grammarAccess.getNopAccess().getNopNopKeyword_0()); }
		)
		{ after(grammarAccess.getNopAccess().getNopNopKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__CommandAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandsAccess().getCommandCommandParserRuleCall_0_0()); }
		ruleCommand
		{ after(grammarAccess.getCommandsAccess().getCommandCommandParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commands__CommandsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandsAccess().getCommandsCommandParserRuleCall_1_1_0()); }
		ruleCommand
		{ after(grammarAccess.getCommandsAccess().getCommandsCommandParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__CommandAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getCommandNopParserRuleCall_0_0()); }
		ruleNop
		{ after(grammarAccess.getCommandAccess().getCommandNopParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__CommandAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getCommandAffectationParserRuleCall_1_0()); }
		ruleAffectation
		{ after(grammarAccess.getCommandAccess().getCommandAffectationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__CommandAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getCommandWhileParserRuleCall_2_0()); }
		ruleWhile
		{ after(grammarAccess.getCommandAccess().getCommandWhileParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__CommandAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getCommandForParserRuleCall_3_0()); }
		ruleFor
		{ after(grammarAccess.getCommandAccess().getCommandForParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__CommandAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getCommandIfParserRuleCall_4_0()); }
		ruleIf
		{ after(grammarAccess.getCommandAccess().getCommandIfParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__CommandAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getCommandForeachParserRuleCall_5_0()); }
		ruleForeach
		{ after(grammarAccess.getCommandAccess().getCommandForeachParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Expr1Assignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForeachAccess().getExpr1ExprParserRuleCall_1_0()); }
		ruleExpr
		{ after(grammarAccess.getForeachAccess().getExpr1ExprParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__Expr2Assignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForeachAccess().getExpr2ExprParserRuleCall_3_0()); }
		ruleExpr
		{ after(grammarAccess.getForeachAccess().getExpr2ExprParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Foreach__CommandsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForeachAccess().getCommandsCommandsParserRuleCall_5_0()); }
		ruleCommands
		{ after(grammarAccess.getForeachAccess().getCommandsCommandsParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfAccess().getExprExprParserRuleCall_1_0()); }
		ruleExpr
		{ after(grammarAccess.getIfAccess().getExprExprParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Commands1Assignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfAccess().getCommands1CommandsParserRuleCall_3_0()); }
		ruleCommands
		{ after(grammarAccess.getIfAccess().getCommands1CommandsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Commands2Assignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfAccess().getCommands2CommandsParserRuleCall_4_1_0()); }
		ruleCommands
		{ after(grammarAccess.getIfAccess().getCommands2CommandsParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForAccess().getExprExprParserRuleCall_1_0()); }
		ruleExpr
		{ after(grammarAccess.getForAccess().getExprExprParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__CommandsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForAccess().getCommandsCommandsParserRuleCall_3_0()); }
		ruleCommands
		{ after(grammarAccess.getForAccess().getCommandsCommandsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__ExprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileAccess().getExprExprParserRuleCall_1_0()); }
		ruleExpr
		{ after(grammarAccess.getWhileAccess().getExprExprParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__While__CommandsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileAccess().getCommandsCommandsParserRuleCall_3_0()); }
		ruleCommands
		{ after(grammarAccess.getWhileAccess().getCommandsCommandsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__ExprsimpleAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprAccess().getExprsimpleExprSimpleParserRuleCall_0()); }
		ruleExprSimple
		{ after(grammarAccess.getExprAccess().getExprsimpleExprSimpleParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__ValeurAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getValeurNilKeyword_0_0()); }
		(
			{ before(grammarAccess.getExprSimpleAccess().getValeurNilKeyword_0_0()); }
			'nil'
			{ after(grammarAccess.getExprSimpleAccess().getValeurNilKeyword_0_0()); }
		)
		{ after(grammarAccess.getExprSimpleAccess().getValeurNilKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__ValeurAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getValeurVARIABLETerminalRuleCall_1_0()); }
		RULE_VARIABLE
		{ after(grammarAccess.getExprSimpleAccess().getValeurVARIABLETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__ValeurAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getValeurSYMBOLTerminalRuleCall_2_0()); }
		RULE_SYMBOL
		{ after(grammarAccess.getExprSimpleAccess().getValeurSYMBOLTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__OpeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getOpeConsKeyword_3_1_0()); }
		(
			{ before(grammarAccess.getExprSimpleAccess().getOpeConsKeyword_3_1_0()); }
			'cons'
			{ after(grammarAccess.getExprSimpleAccess().getOpeConsKeyword_3_1_0()); }
		)
		{ after(grammarAccess.getExprSimpleAccess().getOpeConsKeyword_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__LexprAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getLexprLexprParserRuleCall_3_2_0()); }
		ruleLexpr
		{ after(grammarAccess.getExprSimpleAccess().getLexprLexprParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__OpeAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getOpeListKeyword_4_1_0()); }
		(
			{ before(grammarAccess.getExprSimpleAccess().getOpeListKeyword_4_1_0()); }
			'list'
			{ after(grammarAccess.getExprSimpleAccess().getOpeListKeyword_4_1_0()); }
		)
		{ after(grammarAccess.getExprSimpleAccess().getOpeListKeyword_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__LexprAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getLexprLexprParserRuleCall_4_2_0()); }
		ruleLexpr
		{ after(grammarAccess.getExprSimpleAccess().getLexprLexprParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__OpeAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getOpeHdKeyword_5_1_0()); }
		(
			{ before(grammarAccess.getExprSimpleAccess().getOpeHdKeyword_5_1_0()); }
			'hd'
			{ after(grammarAccess.getExprSimpleAccess().getOpeHdKeyword_5_1_0()); }
		)
		{ after(grammarAccess.getExprSimpleAccess().getOpeHdKeyword_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__ExprAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getExprExprParserRuleCall_5_2_0()); }
		ruleExpr
		{ after(grammarAccess.getExprSimpleAccess().getExprExprParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__OpeAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getOpeTlKeyword_6_1_0()); }
		(
			{ before(grammarAccess.getExprSimpleAccess().getOpeTlKeyword_6_1_0()); }
			'tl'
			{ after(grammarAccess.getExprSimpleAccess().getOpeTlKeyword_6_1_0()); }
		)
		{ after(grammarAccess.getExprSimpleAccess().getOpeTlKeyword_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__ExprAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getExprExprParserRuleCall_6_2_0()); }
		ruleExpr
		{ after(grammarAccess.getExprSimpleAccess().getExprExprParserRuleCall_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__NAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getNNotParserRuleCall_7_1_0()); }
		ruleNot
		{ after(grammarAccess.getExprSimpleAccess().getNNotParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__ExprAssignment_7_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getExprExprParserRuleCall_7_2_0()); }
		ruleExpr
		{ after(grammarAccess.getExprSimpleAccess().getExprExprParserRuleCall_7_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__ValeurAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getValeurSYMBOLTerminalRuleCall_8_1_0()); }
		RULE_SYMBOL
		{ after(grammarAccess.getExprSimpleAccess().getValeurSYMBOLTerminalRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__LexprAssignment_8_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getLexprLexprParserRuleCall_8_2_0()); }
		ruleLexpr
		{ after(grammarAccess.getExprSimpleAccess().getLexprLexprParserRuleCall_8_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Ex1Assignment_9_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getEx1ExprParserRuleCall_9_1_0()); }
		ruleExpr
		{ after(grammarAccess.getExprSimpleAccess().getEx1ExprParserRuleCall_9_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__OpeAssignment_9_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getOpeAlternatives_9_2_0()); }
		(rule__ExprSimple__OpeAlternatives_9_2_0)
		{ after(grammarAccess.getExprSimpleAccess().getOpeAlternatives_9_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSimple__Ex2Assignment_9_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprSimpleAccess().getEx2ExprParserRuleCall_9_3_0()); }
		ruleExpr
		{ after(grammarAccess.getExprSimpleAccess().getEx2ExprParserRuleCall_9_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lexpr__ExprAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLexprAccess().getExprExprParserRuleCall_0_0()); }
		ruleExpr
		{ after(grammarAccess.getLexprAccess().getExprExprParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lexpr__LexprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLexprAccess().getLexprLexprParserRuleCall_1_0()); }
		ruleLexpr
		{ after(grammarAccess.getLexprAccess().getLexprLexprParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__NotAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotAccess().getNotExclamationMarkKeyword_0()); }
		(
			{ before(grammarAccess.getNotAccess().getNotExclamationMarkKeyword_0()); }
			'!'
			{ after(grammarAccess.getNotAccess().getNotExclamationMarkKeyword_0()); }
		)
		{ after(grammarAccess.getNotAccess().getNotExclamationMarkKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_VARIABLE : 'A'..'Z' ('A'..'Z'|'a'..'z')*;

RULE_SYMBOL : 'a'..'z' ('A'..'Z'|'a'..'z'|'0'..'9')* ((('-'|'+'|'.'|'/'|'_'|'&')|'->') ('A'..'Z'|'a'..'z'|'0'..'9')+)* ('!'|'?')?;

RULE_NOMBRE : '1'..'9' ('0'..'9')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
