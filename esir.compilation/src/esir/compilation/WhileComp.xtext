grammar esir.compilation.WhileComp with org.eclipse.xtext.common.Terminals

generate whileComp "http://www.compilation.esir/WhileComp"

/* HEAD */
Program:
	(functions+=Function)*
;
	
Function:
	'function' function=SYMBOL ':' definition=Definition
;

Definition:
	read = Read
	'%'
	commands=Commands
	'%'
	write = Write
;

/* Input & Output */

Read :
	'read' variable+=VARIABLE (',' variable+=VARIABLE)*
;
Write :
	'write' variable+=VARIABLE (',' variable+=VARIABLE)*
;


/* Commandes */

Affectation:
	affectations += VARIABLE (',' affectations += VARIABLE)* ':=' valeurs += Expr (',' valeurs += Expr)* /* TODO Ajouter ExprSimple */
;

Nop:
	nop='nop'
;

Commands:
	command=Command (';' commands+=Command)*
;

Command:
	command=Nop | 
	command=Affectation | 
	command=While|
	command=For|
	command=If|
	command=Foreach	
;

Foreach:
	('foreach' expr1=Expr 'in' expr2=Expr 'do' commands=Commands 'od')
;

If:
	('if' expr=Expr 'then' commands1=Commands (=>'else' commands2=Commands)? 'fi') 	
;

For:
	('for' expr=Expr 'do' commands=Commands 'od') 
;

While:
	('while' expr=Expr 'do' commands=Commands 'od')
;

Expr: 
	exprAnd=ExprAnd
;	

ExprAnd:
	exprOr=ExprOr ('and' exprAnd=ExprAnd)?
;

ExprOr:
	exprNot=ExprNot ('or' exprOr=ExprOr)?
;

ExprNot:
	(not=Not)? exprEq=ExprEq
;

ExprEq:
	exprSimple1=ExprSimple ('=?' exprSimple2=ExprSimple)?
;

Vars:
	(variable=VARIABLE ',' vars=Vars) | variable=VARIABLE
;	
Exprs:
	=>(expr=Expr ',' exprs=Exprs) | expr=Expr
;
	
ExprSimple:
	valeur='nil' | valeur=VARIABLE | valeur=SYMBOL |
	'(' ope='cons' lexpr=Lexpr ')' |
	'(' ope='list' lexpr=Lexpr ')' |
	'(' ope='hd' expr=Expr ')' |
	'(' ope='tl' expr=Expr ')' |
	'(' valeur=SYMBOL lexpr=Lexpr ')'
;

Lexpr:
	expr=Expr (lexpr=Lexpr)?
;

Not:
	not = '!'
;

Cons:
	cons='cons'
;

List:
	list='list'
;

Hd:
	hd='hd'
;

Tl:
	tl='tl'
;

Nil2:
	nil='nil'
;


terminal VARIABLE:
	'A'..'Z'('A'..'Z'|'a'..'z')*
;
	
terminal SYMBOL:
	'a'..'z'('A'..'Z'|'a'..'z'|'0'..'9')*
	((('-'|'+'|'.'|'/'|'_'|'&')|"->")('A'..'Z'|'a'..'z'|'0'..'9')+)*
	('!'|'?')?
;

terminal NOMBRE:
	('1'..'9')('0'..'9')*
;

